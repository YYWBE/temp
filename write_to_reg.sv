//Module for Store instructions - data to be written to reg file is generated by this module
module write_to_reg(
    input [6:0] op,
    input [2:0] funct3,
    input [31:0] daddr,
    input [31:0] drdata,
    input [31:0] MW_regdata_out,
    output reg[31:0] out
);
	reg [31:0] offset;

    always@(*)  //If this is a load instruction, then drdata has to be modified and written to reg file. Else, ALU output MW_regdata_out is used.
    begin
        if(op!=7'b0000011)  //If not load instruction
            out =  MW_regdata_out;     
        else
        begin
            offset = (daddr[1:0]<<3);  //offset = 8*rv1[1:0]-1 ,eg, 8*1=8, so drdata[15:8]
            case(funct3)
            3'b000: out = {{24{drdata[offset+7]}}, drdata[offset +: 8]};    //LB
            3'b001: out = {{16{drdata[offset+15]}}, drdata[offset +: 16]};  //LH
            3'b010: out = drdata;                                   		//LW
            3'b100: out = {24'b0, drdata[offset +: 8]};             		//LBU
            3'b101: out = {16'b0, drdata[offset +: 16]};            		//LHU
            endcase
        end
    end
endmodule