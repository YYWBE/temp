//Module for branch instructions - The new pc value is generated by this module
module B_type(
    input [2:0] funct3,
	input [31:0] iaddr,
	input signed [31:0] imm,
    input signed [31:0] in1, in2,
    output reg [31:0] out,
	 output reg jump_flag
);
	wire [31:0] tmp1, tmp2;
	assign tmp1 = in1;
	assign tmp2 = in2;
    always@(*)
    begin
		case(funct3)
        3'b000: 
		  begin
		  out = (in1==in2)? (imm-12) : (0);
		  jump_flag = (in1==in2)?1:0;
		  end
		  3'b001: 
		  begin
		  out = (in1!=in2)? (imm-12) : (0);
		  jump_flag = (in1!=in2)?1:0;
		  end
        3'b100: 
		  begin
		  out = (in1<in2)? (imm-12) : (0);
		  jump_flag = (in1<in2)?1:0;
		  end
        3'b101: 
		  begin
		  out = (in1>=in2)? (imm-12) : (0);
		  jump_flag = (in1>=in2)?1:0;
		  end
        3'b110: 
		  begin
		  out = (tmp1<tmp2)? (imm-12) : (0);
		  jump_flag = (tmp1<tmp2)?1:0;
		  end
        3'b111: 
		  begin
		  out = (tmp1>=tmp2)? (imm-12) : (0);
		  jump_flag = (tmp1>=tmp2)?1:0;
		  end
		endcase
	 end
endmodule